// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parses translation units parses single trans-unit 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение о чем-то",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units parses sources when targets are absent with useSource flag enabled 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение о чем-то",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Фрагмент Текста",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units parses targets 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение о чем-то",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Фрагмент Текста",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses autolink wrapped in <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер один ",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": "<https://www.google.com>",
      "nodeType": "self-closing",
      "syntax": "link_autolink",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses code wrapped in <x> tag 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер ",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": "\`один\`",
      "nodeType": "self-closing",
      "syntax": "code",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses em wrapped in <g> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "*",
      "nodeType": "open",
      "syntax": "em",
      "type": "tag",
    },
    Object {
      "data": "один",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "*",
      "nodeType": "close",
      "syntax": "em",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses em wrapped in <g> tags 2`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "~~",
      "nodeType": "open",
      "syntax": "s",
      "type": "tag",
    },
    Object {
      "data": "один",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "~~",
      "nodeType": "close",
      "syntax": "s",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses empty image wrapped in <g> and <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Sentence ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "open",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "close",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses file wrapped in <g> and <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Sentence with ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "{%%}",
      "nodeType": "open",
      "syntax": "file",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": " src=\\"path/to/file\\"",
      "nodeType": "self-closing",
      "syntax": "file_src",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "open",
      "syntax": "file_name",
      "type": "tag",
    },
    Object {
      "data": "readme.md",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "close",
      "syntax": "file_name",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": " referrerpolicy=\\"no-referrer\\"",
      "nodeType": "self-closing",
      "syntax": "file_referrerpolicy",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": " rel=\\"noopener\\"",
      "nodeType": "self-closing",
      "syntax": "file_rel",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": " target=\\"_blank\\"",
      "nodeType": "self-closing",
      "syntax": "file_target",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": " type=\\"text/plain\\"",
      "nodeType": "self-closing",
      "syntax": "file_type",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "{%%}",
      "nodeType": "close",
      "syntax": "file",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses heading with anchors wrapped in <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Heading with anchors",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": " {#anchor1}",
      "nodeType": "self-closing",
      "syntax": "anchor",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": " {#anchor2}",
      "nodeType": "self-closing",
      "syntax": "anchor",
      "type": "tag",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses image with all attributes wrapped in <g> and <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Sentence ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "open",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "image",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "close",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "image.png",
      "nodeType": "self-closing",
      "syntax": "image_attributes_src",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "open",
      "syntax": "image_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "hint",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "close",
      "syntax": "image_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "=100x100",
      "nodeType": "self-closing",
      "syntax": "image_attributes_size",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses image with src and size wrapped in <g> and <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Sentence ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "open",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "image",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "close",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "image.png",
      "nodeType": "self-closing",
      "syntax": "image_attributes_src",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "=100x100",
      "nodeType": "self-closing",
      "syntax": "image_attributes_size",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses image with src and title wrapped in <g> and <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Sentence ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "open",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "image",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "close",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "image.png",
      "nodeType": "self-closing",
      "syntax": "image_attributes_src",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "open",
      "syntax": "image_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "hint",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "close",
      "syntax": "image_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses image with src title and height wrapped in <g> and <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Sentence ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "open",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "image",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "close",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "image.png",
      "nodeType": "self-closing",
      "syntax": "image_attributes_src",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "open",
      "syntax": "image_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "hint",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "close",
      "syntax": "image_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "=x100",
      "nodeType": "self-closing",
      "syntax": "image_attributes_size",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses image with src title and width wrapped in <g> and <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Sentence ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "open",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "image",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "close",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "image.png",
      "nodeType": "self-closing",
      "syntax": "image_attributes_src",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "open",
      "syntax": "image_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "hint",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "close",
      "syntax": "image_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "=100x",
      "nodeType": "self-closing",
      "syntax": "image_attributes_size",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses image with src wrapped in <g> and <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Sentence ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "open",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "image",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "![]",
      "nodeType": "close",
      "syntax": "image_text_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "image.png",
      "nodeType": "self-closing",
      "syntax": "image_attributes_src",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "image_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses links wrapped in <g> and <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "[]",
      "nodeType": "open",
      "syntax": "link_text_part",
      "type": "tag",
    },
    Object {
      "data": "один",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "[]",
      "nodeType": "close",
      "syntax": "link_text_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "link_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "one.md",
      "nodeType": "self-closing",
      "syntax": "link_attributes_href",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "open",
      "syntax": "link_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "one",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "close",
      "syntax": "link_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "link_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "[]",
      "nodeType": "open",
      "syntax": "link_text_part",
      "type": "tag",
    },
    Object {
      "data": "два",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "[]",
      "nodeType": "close",
      "syntax": "link_text_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "link_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "two.md",
      "nodeType": "self-closing",
      "syntax": "link_attributes_href",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "link_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses liquid conditions wrapped in <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Sentence with ",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": "{% if var == \\"val\\" %}",
      "nodeType": "self-closing",
      "syntax": "liquid_If",
      "type": "tag",
    },
    Object {
      "data": " val ",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": "{% else %}",
      "nodeType": "self-closing",
      "syntax": "liquid_Else",
      "type": "tag",
    },
    Object {
      "data": " other val ",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": "{% endif %}",
      "nodeType": "self-closing",
      "syntax": "liquid_EndIf",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses liquid function wrapped in <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Sentence with function ",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": "{{ user.name.slice(1, 2) }}",
      "nodeType": "self-closing",
      "syntax": "liquid_Function",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses liquid loop wrapped in <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Sentence ",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": "{% for x in xs %}",
      "nodeType": "self-closing",
      "syntax": "liquid_ForInLoop",
      "type": "tag",
    },
    Object {
      "data": " x ",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": "{% endfor %}",
      "nodeType": "self-closing",
      "syntax": "liquid_EndForInLoop",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses ref links wrapped in <g> and <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер ",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": "[{#T}]",
      "nodeType": "self-closing",
      "syntax": "link_reflink",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "link_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "one.md",
      "nodeType": "self-closing",
      "syntax": "link_attributes_href",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "open",
      "syntax": "link_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "one",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "close",
      "syntax": "link_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "link_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер ",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": "[{#T}]",
      "nodeType": "self-closing",
      "syntax": "link_reflink",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "link_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "two.md",
      "nodeType": "self-closing",
      "syntax": "link_attributes_href",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "link_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses samp wrapped in <g> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "##",
      "nodeType": "open",
      "syntax": "samp",
      "type": "tag",
    },
    Object {
      "data": "один",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "##",
      "nodeType": "close",
      "syntax": "samp",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses strong wrapped in <g> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "**",
      "nodeType": "open",
      "syntax": "strong",
      "type": "tag",
    },
    Object {
      "data": "один",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "**",
      "nodeType": "close",
      "syntax": "strong",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses sup wrapped in <g> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "^",
      "nodeType": "open",
      "syntax": "sup",
      "type": "tag",
    },
    Object {
      "data": "один",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "^",
      "nodeType": "close",
      "syntax": "sup",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses variable href link wrapped in <x> tags 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Предложение номер ",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "[]",
      "nodeType": "open",
      "syntax": "link_text_part",
      "type": "tag",
    },
    Object {
      "data": "один",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "[]",
      "nodeType": "close",
      "syntax": "link_text_part",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "open",
      "syntax": "link_attributes_part",
      "type": "tag",
    },
    Object {
      "data": "x",
      "equivText": "{{one}}",
      "nodeType": "self-closing",
      "syntax": "link_attributes_href",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "open",
      "syntax": "link_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "one",
      "type": "text",
    },
    Object {
      "data": "g",
      "equivText": "\\"\\"",
      "nodeType": "close",
      "syntax": "link_attributes_title",
      "type": "tag",
    },
    Object {
      "data": "g",
      "equivText": "()",
      "nodeType": "close",
      "syntax": "link_attributes_part",
      "type": "tag",
    },
    Object {
      "data": ".",
      "type": "text",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;

exports[`parses translation units with <g> and <x> tags parses video wrapped in x tag 1`] = `
Array [
  Array [
    Object {
      "data": "target",
      "nodeType": "open",
      "type": "tag",
    },
    Object {
      "data": "Another sentence ",
      "type": "text",
    },
    Object {
      "data": "x",
      "equivText": "@[youtube](rJz4OaURJ6U)",
      "nodeType": "self-closing",
      "syntax": "video",
      "type": "tag",
    },
    Object {
      "data": "target",
      "nodeType": "close",
      "type": "tag",
    },
  ],
]
`;
