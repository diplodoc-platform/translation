// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders xlf from markdown renders autolink wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер один <x ctype=\\"x-link_autolink\\" equiv-text=\\"&lt;https://www.google.com&gt;\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер два <x ctype=\\"x-link_autolink\\" equiv-text=\\"&lt;https://www.youtube.com&gt;\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders code wrapped in <x> tag 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер <x ctype=\\"x-code_open\\" equiv-text=\\"\`\\" />один<x ctype=\\"x-code_close\\" equiv-text=\\"\`\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер <x ctype=\\"x-code_open\\" equiv-text=\\"\`\\" />два<x ctype=\\"x-code_close\\" equiv-text=\\"\`\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders em wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер <x ctype=\\"x-em_open\\" equiv-text=\\"*\\" />один<x ctype=\\"x-em_close\\" equiv-text=\\"*\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер <x ctype=\\"x-em_open\\" equiv-text=\\"*\\" />два<x ctype=\\"x-em_close\\" equiv-text=\\"*\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders file wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Sentence with <x ctype=\\"x-file_open\\" equiv-text=\\"{%\\" /><x ctype=\\"x-file_src\\" equiv-text=\\"src=&quot;path/to/file&quot;\\" /><x ctype=\\"x-file_name_open\\" equiv-text=\\"name=&quot;\\" />readme.md<x ctype=\\"x-file_name_close\\" equiv-text=\\"&quot;\\" /><x ctype=\\"x-file_referrerpolicy\\" equiv-text=\\"referrerpolicy=&quot;no-referrer&quot;\\" /><x ctype=\\"x-file_rel\\" equiv-text=\\"rel=&quot;noopener&quot;\\" /><x ctype=\\"x-file_target\\" equiv-text=\\"target=&quot;_blank&quot;\\" /><x ctype=\\"x-file_type\\" equiv-text=\\"type=&quot;text/plain&quot;\\" /><x ctype=\\"x-file_close\\" equiv-text=\\"%}\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders heading with anchors wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Heading with anchors<x ctype=\\"x-anchor\\" equiv-text=\\" {#anchor1}\\" /><x ctype=\\"x-anchor\\" equiv-text=\\" {#anchor2}\\" /></source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders html wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Sentence<x ctype=\\"x-html_inline\\" equiv-text=\\"&lt;br&gt;\\" />with <x ctype=\\"x-html_inline\\" equiv-text=\\"&lt;b&gt;\\" />html<x ctype=\\"x-html_inline\\" equiv-text=\\"&lt;/b&gt;\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders image all attributes wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Sentence <x ctype=\\"x-image_text_part_open\\" equiv-text=\\"![\\" />image<x ctype=\\"x-image_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-image_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-image_attributes_src\\" equiv-text=\\"image.png\\" /><x ctype=\\"x-image_attributes_title_open\\" equiv-text=\\"&quot;\\" />hint<x ctype=\\"x-image_attributes_title_close\\" equiv-text=\\"&quot;\\" /><x ctype=\\"x-image_attributes_size\\" equiv-text=\\"=100x100\\" /><x ctype=\\"x-image_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Sentence <x ctype=\\"x-image_text_part_open\\" equiv-text=\\"![\\" />image<x ctype=\\"x-image_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-image_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-image_attributes_src\\" equiv-text=\\"image.png\\" /><x ctype=\\"x-image_attributes_title_open\\" equiv-text=\\"&quot;\\" />hint<x ctype=\\"x-image_attributes_title_close\\" equiv-text=\\"&quot;\\" /><x ctype=\\"x-image_attributes_size\\" equiv-text=\\"=x100\\" /><x ctype=\\"x-image_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"3\\">
        <source>Sentence <x ctype=\\"x-image_text_part_open\\" equiv-text=\\"![\\" />image<x ctype=\\"x-image_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-image_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-image_attributes_src\\" equiv-text=\\"image.png\\" /><x ctype=\\"x-image_attributes_title_open\\" equiv-text=\\"&quot;\\" />hint<x ctype=\\"x-image_attributes_title_close\\" equiv-text=\\"&quot;\\" /><x ctype=\\"x-image_attributes_size\\" equiv-text=\\"=100x\\" /><x ctype=\\"x-image_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"4\\">
        <source>Sentence <x ctype=\\"x-image_text_part_open\\" equiv-text=\\"![\\" />image<x ctype=\\"x-image_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-image_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-image_attributes_src\\" equiv-text=\\"image.png\\" /><x ctype=\\"x-image_attributes_size\\" equiv-text=\\"=100x100\\" /><x ctype=\\"x-image_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"5\\">
        <source>Sentence <x ctype=\\"x-image_text_part_open\\" equiv-text=\\"![\\" />image<x ctype=\\"x-image_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-image_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-image_attributes_src\\" equiv-text=\\"image.png\\" /><x ctype=\\"x-image_attributes_title_open\\" equiv-text=\\"&quot;\\" />hint<x ctype=\\"x-image_attributes_title_close\\" equiv-text=\\"&quot;\\" /><x ctype=\\"x-image_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"6\\">
        <source>Sentence <x ctype=\\"x-image_text_part_open\\" equiv-text=\\"![\\" />image<x ctype=\\"x-image_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-image_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-image_attributes_src\\" equiv-text=\\"image.png\\" /><x ctype=\\"x-image_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"7\\">
        <source>Sentence <x ctype=\\"x-image_text_part_open\\" equiv-text=\\"![\\" /><x ctype=\\"x-image_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-image_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-image_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders link with multiple sentences inside text part and title part wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source><x ctype=\\"x-link_text_part_open\\" equiv-text=\\"[\\" />Link text sentence one!</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Link text sentence Two?<x ctype=\\"x-link_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-link_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-link_attributes_href\\" equiv-text=\\"file.md\\" /><x ctype=\\"x-link_attributes_title_open\\" equiv-text=\\"&quot;\\" />Link title sentence one.</source>
      </trans-unit>
      <trans-unit id=\\"3\\">
        <source>Link title sentence two!<x ctype=\\"x-link_attributes_title_close\\" equiv-text=\\"&quot;\\" /><x ctype=\\"x-link_attributes_part_close\\" equiv-text=\\")\\" /></source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders links wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер <x ctype=\\"x-link_text_part_open\\" equiv-text=\\"[\\" />один<x ctype=\\"x-link_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-link_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-link_attributes_href\\" equiv-text=\\"one.md\\" /><x ctype=\\"x-link_attributes_title_open\\" equiv-text=\\"&quot;\\" />one<x ctype=\\"x-link_attributes_title_close\\" equiv-text=\\"&quot;\\" /><x ctype=\\"x-link_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер <x ctype=\\"x-link_text_part_open\\" equiv-text=\\"[\\" />два<x ctype=\\"x-link_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-link_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-link_attributes_href\\" equiv-text=\\"two.md\\" /><x ctype=\\"x-link_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders liquid conditions wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Sentence with <x ctype=\\"x-liquid_If\\" equiv-text=\\"{% if var == &quot;val&quot; %}\\" /> val <x ctype=\\"x-liquid_Else\\" equiv-text=\\"{% else %}\\" /> other val <x ctype=\\"x-liquid_EndIf\\" equiv-text=\\"{% endif %}\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source><x ctype=\\"x-liquid_If\\" equiv-text=\\"{% if var == &quot;val&quot; %}\\" /> A <x ctype=\\"x-liquid_Else\\" equiv-text=\\"{% else %}\\" /> B <x ctype=\\"x-liquid_EndIf\\" equiv-text=\\"{% endif %}\\" /> Point.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders liquid filters wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Sentence with filter <x ctype=\\"x-liquid_Filter\\" equiv-text=\\"{{ users | length }}\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source><x ctype=\\"x-liquid_Filter\\" equiv-text=\\"{{user | capitalize}}\\" /> starts with filter.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders liquid filters wrapped in <x> tags inside tables 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Heading one</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Heading two</source>
      </trans-unit>
      <trans-unit id=\\"3\\">
        <source>Cell with <x ctype=\\"x-liquid_Filter\\" equiv-text=\\"{{ variable | length }}\\" /></source>
      </trans-unit>
      <trans-unit id=\\"4\\">
        <source>Cell with <x ctype=\\"x-liquid_Variable\\" equiv-text=\\"{{ variable }}\\" /></source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders liquid functions wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Sentence with function <x ctype=\\"x-liquid_Function\\" equiv-text=\\"{{ user.name.slice(1, 2) }}\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source><x ctype=\\"x-liquid_Function\\" equiv-text=\\"{{ user.name.slice(1, 2) }}\\" /> starts with function.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders liquid loops wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Sentence <x ctype=\\"x-liquid_ForInLoop\\" equiv-text=\\"{% for x in xs %}\\" /> x <x ctype=\\"x-liquid_EndForInLoop\\" equiv-text=\\"{% endfor %}\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source><x ctype=\\"x-liquid_ForInLoop\\" equiv-text=\\"{% for x in xs %}\\" /> X <x ctype=\\"x-liquid_EndForInLoop\\" equiv-text=\\"{% endfor %}\\" /> cool.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders liquid variables wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Sentence with <x ctype=\\"x-liquid_Variable\\" equiv-text=\\"{{ variable }}\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source><x ctype=\\"x-liquid_Variable\\" equiv-text=\\"{{variable}}\\" /> sentence.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders plain text 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер один.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер два.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders plain text sentences separated by newline 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер один.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер два.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders ref links wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер <x ctype=\\"x-link_reflink\\" equiv-text=\\"[{#T}]\\" /><x ctype=\\"x-link_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-link_attributes_href\\" equiv-text=\\"one.md\\" /><x ctype=\\"x-link_attributes_title_open\\" equiv-text=\\"&quot;\\" />one<x ctype=\\"x-link_attributes_title_close\\" equiv-text=\\"&quot;\\" /><x ctype=\\"x-link_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер <x ctype=\\"x-link_reflink\\" equiv-text=\\"[{#T}]\\" /><x ctype=\\"x-link_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-link_attributes_href\\" equiv-text=\\"two.md\\" /><x ctype=\\"x-link_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders s wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер <x ctype=\\"x-s_open\\" equiv-text=\\"~~\\" />один<x ctype=\\"x-s_close\\" equiv-text=\\"~~\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер <x ctype=\\"x-s_open\\" equiv-text=\\"~~\\" />два<x ctype=\\"x-s_close\\" equiv-text=\\"~~\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders samp wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер <x ctype=\\"x-samp_open\\" equiv-text=\\"##\\" />один<x ctype=\\"x-samp_close\\" equiv-text=\\"##\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер <x ctype=\\"x-samp_open\\" equiv-text=\\"##\\" />два<x ctype=\\"x-samp_close\\" equiv-text=\\"##\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders sentences with abbreviations inside parenthesis 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Sentence (см. <x ctype=\\"x-link_text_part_open\\" equiv-text=\\"[\\" />link<x ctype=\\"x-link_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-link_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-link_attributes_href\\" equiv-text=\\"file.md\\" /><x ctype=\\"x-link_attributes_part_close\\" equiv-text=\\")\\" />) continues.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Another sentence.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders sentences with inline code that has liquid syntax inside 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Sentence <x ctype=\\"x-code_open\\" equiv-text=\\"\`\\" /><x ctype=\\"x-liquid_Variable\\" equiv-text=\\"{{ ui-key.yacloud.common.label_tcp }}\\" /> other<x ctype=\\"x-code_close\\" equiv-text=\\"\`\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Another sentence <x ctype=\\"x-code_open\\" equiv-text=\\"\`\\" /><x ctype=\\"x-liquid_Filter\\" equiv-text=\\"{{user.name | capitalize}}\\" /> other<x ctype=\\"x-code_close\\" equiv-text=\\"\`\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders sentences with links in the end 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Инструкция содержит информацию о создании и настройке <x ctype=\\"x-link_text_part_open\\" equiv-text=\\"[\\" />группы рабочих столов<x ctype=\\"x-link_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-link_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-link_attributes_href\\" equiv-text=\\"concepts/desktops-and-groups.md\\" /><x ctype=\\"x-link_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Если вы получили от администратора ссылку на <x ctype=\\"x-link_text_part_open\\" equiv-text=\\"[\\" />витрину пользовательских рабочих столов<x ctype=\\"x-link_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-link_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-link_attributes_href\\" equiv-text=\\"concepts/showcase.md\\" /><x ctype=\\"x-link_attributes_part_close\\" equiv-text=\\")\\" />, перейдите к подразделу <x ctype=\\"x-link_reflink\\" equiv-text=\\"[{#T}]\\" /><x ctype=\\"x-link_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-link_attributes_href\\" equiv-text=\\"#get-credentials\\" /><x ctype=\\"x-link_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders strong wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер <x ctype=\\"x-strong_open\\" equiv-text=\\"**\\" />один<x ctype=\\"x-strong_close\\" equiv-text=\\"**\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер <x ctype=\\"x-strong_open\\" equiv-text=\\"**\\" />два<x ctype=\\"x-strong_close\\" equiv-text=\\"**\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders sup wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер<x ctype=\\"x-sup_open\\" equiv-text=\\"^\\" />один<x ctype=\\"x-sup_close\\" equiv-text=\\"^\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер<x ctype=\\"x-sup_open\\" equiv-text=\\"^\\" />два<x ctype=\\"x-sup_close\\" equiv-text=\\"^\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders variable href link wrapped in <x> tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Предложение номер <x ctype=\\"x-link_text_part_open\\" equiv-text=\\"[\\" />один<x ctype=\\"x-link_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-link_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-link_attributes_href\\" equiv-text=\\"{{one}}\\" /><x ctype=\\"x-link_attributes_title_open\\" equiv-text=\\"&quot;\\" />one<x ctype=\\"x-link_attributes_title_close\\" equiv-text=\\"&quot;\\" /><x ctype=\\"x-link_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Предложение номер <x ctype=\\"x-link_text_part_open\\" equiv-text=\\"[\\" />два<x ctype=\\"x-link_text_part_close\\" equiv-text=\\"]\\" /><x ctype=\\"x-link_attributes_part_open\\" equiv-text=\\"(\\" /><x ctype=\\"x-link_attributes_href\\" equiv-text=\\"{{two}}\\" /><x ctype=\\"x-link_attributes_part_close\\" equiv-text=\\")\\" />.</source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;

exports[`renders xlf from markdown renders video wrapped in <x> tag 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
  <file original=\\"text.md\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
    <header>
      <skeleton>
        <external-file href=\\"text.skl.md\\"></external-file>
      </skeleton>
    </header>
    <body>
      <trans-unit id=\\"1\\">
        <source>Sentence goes here.</source>
      </trans-unit>
      <trans-unit id=\\"2\\">
        <source>Another sentence <x ctype=\\"x-video\\" equiv-text=\\"@[youtube](rJz4OaURJ6U)\\" /></source>
      </trans-unit>
    </body>
  </file>
</xliff>
"
`;
